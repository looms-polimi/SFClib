within SFC.BasicBlocks;

model InitialStepNOinput
  
  SFC.Interfaces.StepOutput OUT annotation(
    Placement(visible = true, transformation(origin = {-116, -40}, extent = {{-20, -10}, {20, 10}}, rotation = 0), iconTransformation(origin = {0, -100}, extent = {{-20, -20}, {20, 20}}, rotation = 0)));
  
  Modelica.Blocks.Interfaces.BooleanOutput X annotation(
    Placement(visible = true, transformation(origin = {-34, 18}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {120, -3.55271e-15}, extent = {{-20, -20}, {20, 20}}, rotation = 0)));
  
  Real t(start=0,fixed=true);
  Boolean support; // support variable used to make the system "active output" starts from 0
equation
  der(t) = if support then 1 else 0; 
  OUT.active=X;
  // at the beginning output=X (so the output is 0) and since support=true the time strats counting. So the state moves from 0 to 1 at the first iteration because t>0 is instantly satisfied.
algorithm
  when t > 0 then X := true; end when;
  when change(OUT.fire) then X:=false; support:=false; reinit(t,0); end when;
initial algorithm
  support := true;
  X := false;
  //IN.fire := false;
  
annotation(
    Diagram(coordinateSystem(extent = {{-200, -100}, {200, 100}})),
    Icon(graphics = {Rectangle(fillColor = {238, 238, 236}, fillPattern = FillPattern.Solid, extent = {{-100, 100}, {100, -100}}), Text(origin = {-3, 3}, extent = {{-57, 35}, {57, -35}}, textString = "%name"), Rectangle(origin = {-1, 0}, extent = {{-89, 90}, {89, -90}})}, coordinateSystem(initialScale = 0.1)),
  Documentation(info = "<html><head></head><body><div style=\"text-align: justify;\"><span class=\"Apple-style-span\" style=\"font-size: 12px; \">This block simulates the&nbsp;<b>initial step</b>&nbsp;of the SFC.</span></div><div style=\"text-align: justify;\"><div style=\"text-align: justify; \"><span class=\"Apple-style-span\" style=\"font-size: 12px; \"><br></span></div><div style=\"text-align: justify; \"><span class=\"Apple-style-span\" style=\"font-size: 12px; \">It is used when the initial step is <b>activated only at the beginning</b> of the simulation and once it is deactivated, it will never be active again.</span></div><div style=\"text-align: justify; \"><span class=\"Apple-style-span\" style=\"font-size: 12px; \"><br></span></div><div style=\"text-align: justify; \"><span class=\"Apple-style-span\" style=\"font-size: 12px; \">Each state block has&nbsp;<b>one&nbsp;input</b>&nbsp;and&nbsp;<b>two outputs</b>&nbsp;incorporated in the connectors at the bottom and at the right of the block. The input is received from the transition that is placed after the step, it is used to deactivate the step (it basically communicates that the transition was Ô¨Åred).&nbsp;</span></div><div style=\"text-align: justify; \"><span class=\"Apple-style-span\" style=\"font-size: 12px; \"><div style=\"text-align: justify; \"><br></div><div style=\"text-align: justify; \">The outputs, instead, are used to activate the&nbsp;<b>action</b>&nbsp;blocks and &nbsp;to enable the next transition.</div><div style=\"text-align: justify; \"><br></div><div style=\"text-align: justify; \">This step&nbsp;<b>is active</b>&nbsp;when the simulation starts.</div></span></div></div></body></html>"));

end InitialStepNOinput;