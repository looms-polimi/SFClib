within SFC.ContinuousSys.ContinuousTests;
model testSourcePulseConstINPUT
  SFC.BasicBlocks.Condition C1(y = true)  annotation(
    Placement(visible = true, transformation(origin = {-96, 40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  SFC.BasicBlocks.Condition C2(y = P.y > 29.99)  annotation(
    Placement(visible = true, transformation(origin = {-96, -20}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  SFC.BasicBlocks.InitialStep S0 annotation(
    Placement(visible = true, transformation(origin = {-130, 70}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  SFC.BasicBlocks.Transition T1 annotation(
    Placement(visible = true, transformation(origin = {-130, 40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  SFC.BasicBlocks.Step S1 annotation(
    Placement(visible = true, transformation(origin = {-130, 10}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  SFC.BasicBlocks.Transition T2 annotation(
    Placement(visible = true, transformation(origin = {-130, -20}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Feedback feedback1 annotation(
    Placement(visible = true, transformation(origin = {-24, 10}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Gain K(k = 2 / 0.7)  annotation(
    Placement(visible = true, transformation(origin = {10, 10}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Continuous.TransferFunction P(a = {80, 42, 1}, b = {0.7}, y_start = 20)  annotation(
    Placement(visible = true, transformation(origin = {152, 10}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Continuous.TransferFunction R(a = {40, 0}, b = {40, 1})  annotation(
    Placement(visible = true, transformation(origin = {44, 10}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Nonlinear.Limiter limiter1(limitsAtInit = true, uMax = 100)  annotation(
    Placement(visible = true, transformation(origin = {78, 10}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.Pulse pulse1(amplitude = 30, period = 300, width = 100)  annotation(
    Placement(visible = true, transformation(origin = {-50, 10}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  SFC.BasicBlocks.Action ON(qualifierType = SFC.Types.Qualifier.P)  annotation(
    Placement(visible = true, transformation(origin = {-96, 10}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  SFC.BasicBlocks.Action OFF(qualifierType = SFC.Types.Qualifier.P)  annotation(
    Placement(visible = true, transformation(origin = {-96, -50}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  SFC.BasicBlocks.Step S2 annotation(
    Placement(visible = true, transformation(origin = {-130, -50}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  SFC.BasicBlocks.Transition T3 annotation(
    Placement(visible = true, transformation(origin = {-130, -80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  SFC.BasicBlocks.Condition C3(y = P.y < 5)  annotation(
    Placement(visible = true, transformation(origin = {-96, -80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  BlocksImpl.OnOffControl onOffControl1 annotation(
    Placement(visible = true, transformation(origin = {116, 10}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
equation
  connect(OFF.actionBoolean, onOffControl1.commandIN[2]) annotation(
    Line(points = {{-86, -48}, {-66, -48}, {-66, 32}, {116, 32}, {116, 18}, {116, 18}}, color = {255, 0, 255}));
  connect(onOffControl1.controllerOUT, P.u) annotation(
    Line(points = {{134, 10}, {138, 10}, {138, 10}, {140, 10}}, color = {0, 0, 127}));
  connect(limiter1.y, onOffControl1.regulatorIN) annotation(
    Line(points = {{90, 10}, {98, 10}, {98, 10}, {100, 10}}, color = {0, 0, 127}));
  connect(T3.C, C3.y) annotation(
    Line(points = {{-118, -80}, {-108, -80}, {-108, -80}, {-108, -80}}, color = {255, 0, 255}));
  connect(S1.X, ON.phase_active) annotation(
    Line(points = {{-118, 10}, {-108, 10}, {-108, 10}, {-106, 10}}, color = {255, 0, 255}));
  connect(S2.X, OFF.phase_active) annotation(
    Line(points = {{-118, -50}, {-106, -50}}, color = {255, 0, 255}));
  connect(T2.C, C2.y) annotation(
    Line(points = {{-118, -20}, {-107, -20}}, color = {255, 0, 255}));
  connect(T1.C, C1.y) annotation(
    Line(points = {{-118, 40}, {-107, 40}}, color = {255, 0, 255}));
  connect(T3.OUT, S0.IN) annotation(
    Line(points = {{-130, -82}, {-130, -82}, {-130, -100}, {-160, -100}, {-160, 90}, {-130, 90}, {-130, 80}, {-130, 80}}));
  connect(S2.OUT, T3.IN) annotation(
    Line(points = {{-130, -60}, {-130, -60}, {-130, -78}, {-130, -78}}));
  connect(T2.OUT, S2.IN) annotation(
    Line(points = {{-130, -22}, {-130, -22}, {-130, -40}, {-130, -40}}));
  connect(pulse1.y, feedback1.u1) annotation(
    Line(points = {{-39, 10}, {-31, 10}, {-31, 10}, {-32, 10}, {-32, 10}, {-33, 10}}, color = {0, 0, 127}));
  connect(R.y, limiter1.u) annotation(
    Line(points = {{55, 10}, {66, 10}}, color = {0, 0, 127}));
  connect(K.y, R.u) annotation(
    Line(points = {{21, 10}, {32, 10}}, color = {0, 0, 127}));
  connect(feedback1.u2, P.y) annotation(
    Line(points = {{-24, 2}, {-24, -10}, {172, -10}, {172, 10}, {163, 10}}, color = {0, 0, 127}));
  connect(feedback1.y, K.u) annotation(
    Line(points = {{-15, 10}, {-3, 10}}, color = {0, 0, 127}));
  connect(S1.OUT, T2.IN) annotation(
    Line(points = {{-130, 0}, {-131, 0}, {-131, 0}, {-130, 0}, {-130, -18}, {-133, -18}, {-133, -18}, {-130, -18}}));
  connect(T1.OUT, S1.IN) annotation(
    Line(points = {{-130, 38}, {-131, 38}, {-131, 38}, {-130, 38}, {-130, 20}, {-133, 20}, {-133, 20}, {-130.5, 20}, {-130.5, 20}, {-130, 20}}));
  connect(S0.OUT, T1.IN) annotation(
    Line(points = {{-130, 60}, {-130, 60}, {-130, 60}, {-130, 60}, {-130, 42}, {-130, 42}}));
  annotation(
    uses(Modelica(version = "3.2.3")));end testSourcePulseConstINPUT;